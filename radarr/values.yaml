# Default values for radarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: hotio/radarr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

deployment:
  # -- Deployment strategy
  strategy:
    type: Recreate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespace: 
  name: media

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  targetPort: 7878

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: radarr.kitties.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: 
   - secretName: radarr-tls 
     hosts:
       - radarr.kitties.dev

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  existingClaim: "my-longhorn-pvc"
  mountPath: "/download"
  accessMode: ReadWriteOnce
  size: 800Mi

env:
  PUID: "1000"
  PGID: "1000"
  TZ: "Europe/London"
  UMASK: "002"

    #persistence:
    #  storageClass: ""
    #  existingClaim: ""
    #  enabled: true
